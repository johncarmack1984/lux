[package]
name = "lux"
version = "0.1.0"
description = "A DMX lighting control system for Enttec Open DMX USB devices."
edition = "2021"
rust-version = "1.70"
authors = ["John Carmack"]
repository = ""
documentation = "https://lux.johncarmack.com"
license = ""
readme = "../README.md"

keywords = [
    "dmx",
    "ffi",
    "ftdi",
    "enttec",
    "lighting",
    "tauri",
    "nextjs",
    "shadcn",
]
categories = ["api-bindings", "accessibility", "hardware-support"]

publish = false
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "lux_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "^2.0.0-beta", features = ["codegen"] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
bincode = "1.3.3"
enttecopendmx = "0.1.0"
log = "^0.4"
thiserror = "1.0.58"
strum = { version = "0.26.2", features = ["derive"] }
strum_macros = "0.26.2"
tauri-plugin-log = "^2.0.0-beta.3"
tauri-plugin-notification = "^2.0.0-beta.3"
tiny_http = "0.12.0"
tauri-plugin-http = "2.0.0-beta.3"
taurpc = "0.3.0-alpha.1"

specta = { version = "1.0.5", features = ["export"] }
tokio = { version = "1", features = ["full"] }

[dependencies.tauri]
version = "^2.0.0-beta"
features = ["image-ico", "image-png", "macos-private-api", "tray-icon"]

[dev-dependencies.tauri]
version = "^2.0.0-beta"
features = ["test"]

# ftd2xx dependency
[dependencies.libftd2xx]
version = "0.32.4"
# statically link the vendor library, defaults to dynamic if not set
# this will make things "just work" on Linux and Windows
features = ["static"]

[dependencies.tauri-plugin-sql]
features = ["sqlite"]   # or "postgres", or "mysql"
version = "^2.0.0-beta"
# alternatively with Git
git = "https://github.com/tauri-apps/plugins-workspace"
branch = "v2"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
prod = ["tauri/custom-protocol"]

# default to small, optimized release binaries
[profile.release]
panic = "abort"
codegen-units = 1
lto = true
incremental = false
opt-level = "s"

[target."cfg(not(any(target_os = \"android\", target_os = \"ios\")))".dependencies]
tauri-plugin-cli = "2.0.0-beta.3"
