[package]
name = "lux"
authors = ["John Carmack"]
repository = ""
documentation = "https://lux.johncarmack.com"
version = "0.1.0"
edition = "2021"
description = "A DMX lighting control system for Enttec Open DMX USB devices."
license = ""
readme = "../README.md"
default-run = "lux"
rust-version = "1.60"

keywords = [
    "dmx",
    "ffi",
    "ftdi",
    "enttec",
    "lighting",
    "tauri",
    "nextjs",
    "shadcn",
]
categories = ["api-bindings", "accessibility", "hardware-support"]

publish = false
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[badges]
maintenance = { status = "experimental" }

[build-dependencies]
tauri-build = { version = "1.5.1", features = [] }

[dependencies]
bincode = "1.3.3"
enttecopendmx = "0.1.0"
log = "^0.4"
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.6.1", features = [ "macos-private-api", "system-tray"] }
tauri-plugin-log = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
thiserror = "1.0.58"
strum = { version = "0.26.2", features = ["derive"] }
strum_macros = "0.26.2"

# ftd2xx dependency
[dependencies.libftd2xx]
version = "0.32.4"

# statically link the vendor library, defaults to dynamic if not set
# this will make things "just work" on Linux and Windows
features = ["static"]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
